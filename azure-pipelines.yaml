# Starter pipeline
# New deployment test
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: build_sample_web_app
    displayName: Build Integration Serverless
    pool:
      vmImage: ubuntu-latest

    steps:

      ## Install Node
      - task: UseNode@1
        inputs:
          checkLatest: true

## Comment out for first deployment - front-end can only deploy once the S3 bucket has been created ------------------------------------ START
      # - task: Bash@3
      #   inputs:
      #     targetType: 'inline'
      #     script: | ##
      #       cd frontend/sample-web-app
      #       npm install
      #       npm run build:prod
      #       cd ../../
      #     workingDirectory: 'frontend/sample-app'
      #   displayName: Install Frontend dependencies

      # ## Upload the frontend - Comment out for the first deployment
      # - task: S3Upload@1
      #   inputs:
      #     awsCredentials: $(AWS_CREDENTIALS_PROFILE_NAME)
      #     regionName: $(AWS_DEPLOYMENT_REGION)
      #     bucketName: $(AWS_DEPLOYMENT_BUCKET)
      #     sourceFolder: "frontend/sample-web-app/dist/angular-ngrx-material-starter"
      #     globExpressions: "**"
      #   env:
      #     AWS_DEPLOYMENT_BUCKET: $(System.AWS_DEPLOYMENT_BUCKET)
      #     AWS_DEPLOYMENT_REGION: $(System.AWS_DEPLOYMENT_REGION)
      #     AWS_CREDENTIALS_PROFILE_NAME: $(System.AWS_CREDENTIALS_PROFILE_NAME)
      #   displayName: Deploy sample web app hosted in S3
## Comment out for first deployment ------------------------------------ END
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
            npm install
          workingDirectory: 'serverless'
        displayName: Install Serverless Dependencies

      ## Build serverless
      - task: AWSShellScript@1
        inputs:
          awsCredentials: $(AWS_CREDENTIALS_PROFILE_NAME)
          regionName: $(AWS_DEPLOYMENT_REGION)
          scriptType: "inline"
          inlineScript: |
            cd serverless/resources/storage
            ../../node_modules/.bin/serverless deploy --region $(AWS_DEPLOYMENT_REGION) --stage $(AWS_DEPLOYMENT_STAGE)
            cd ../
            cd base-api
            ../../node_modules/.bin/serverless deploy --region $(AWS_DEPLOYMENT_REGION) --stage $(AWS_DEPLOYMENT_STAGE)
            cd ../../
            cd apis/common
            ../../node_modules/.bin/serverless deploy --region $(AWS_DEPLOYMENT_REGION) --stage $(AWS_DEPLOYMENT_STAGE)
        env:
          AWS_DEPLOYMENT_REGION: $(System.AWS_DEPLOYMENT_REGION)
          AWS_CREDENTIALS_PROFILE_NAME: $(System.AWS_CREDENTIALS_PROFILE_NAME)
          AWS_DEPLOYMENT_STAGE: $(System.AWS_DEPLOYMENT_STAGE)
        displayName: Deploy serverless back-end
