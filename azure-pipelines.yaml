# Starter pipeline
# New deployment test
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: build_sample_web_app
    displayName: Build Integration Serverless
    pool:
      vmImage: ubuntu-latest

    steps:
      ## Install Node
      - task: NodeTool@0
        inputs:
          versionSpec: ">10.x.x"
          inlineScript: | ##
            cd frontend/sample-web-app
            npm install
            cd ../../
            cd serverless
            npm install
            cd ../../
        displayName: Install Dependencies and plugins

      ## Upload the frontend - Comment out for the first deployment
      - task: S3Upload@1
        inputs:
          awsCredentials: $(env.AWS_CREDENTIALS_PROFILE_NAME)
          regionName: $(env.AWS_DEPLOYMENT_REGION)
          bucketName: $(env.AWS_DEPLOYMENT_BUCKET)
          sourceFolder: "frontend/sample-web-app/dist/angular-ngrx-material-starter"
          globExpressions: "**"
        env:
          AWS_DEPLOYMENT_BUCKET: $(System.AWS_DEPLOYMENT_BUCKET)
          AWS_DEPLOYMENT_REGION: $(System.AWS_DEPLOYMENT_REGION)
          AWS_CREDENTIALS_PROFILE_NAME: $(System.AWS_CREDENTIALS_PROFILE_NAME)
        displayName: Deploy front-end sample web app

      ## Build serverless
      - task: AWSShellScript@1
        inputs:
          awsCredentials: $(env.AWS_CREDENTIALS_PROFILE_NAME)
          regionName: $(env.AWS_DEPLOYMENT_REGION)
          scriptType: "inline"
          inlineScript: |
            cd serverless/storage
            ../../node_modules/.bin/serverless deploy --region $(env.AWS_DEPLOYMENT_REGION) --stage $(env.AWS_DEPLOYMENT_STAGE)
            cd ../
            cd base-api
            ../../node_modules/.bin/serverless deploy --region $(env.AWS_DEPLOYMENT_REGION) --stage $(env.AWS_DEPLOYMENT_STAGE)
            cd ../../
            cd apis/common
            ../../node_modules/.bin/serverless deploy --region $(env.AWS_DEPLOYMENT_REGION) --stage $(env.AWS_DEPLOYMENT_STAGE)
        env:
          AWS_DEPLOYMENT_REGION: $(System.AWS_DEPLOYMENT_REGION)
          AWS_CREDENTIALS_PROFILE_NAME: $(System.AWS_CREDENTIALS_PROFILE_NAME)
          AWS_DEPLOYMENT_STAGE: $(System.AWS_DEPLOYMENT_STAGE)
        displayName: Deploy serverless back-end
